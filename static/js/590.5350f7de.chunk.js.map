{"version":3,"file":"static/js/590.5350f7de.chunk.js","mappings":"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","sources":["webpack://expense-tracker-app/./src/components/BgImageWrapper/BgImageWrapper.module.css?8cad","components/BgImageWrapper/BgImageWrapper.jsx","js/getRandomNumber.js","components/PieChart/PieChart.jsx","webpack://expense-tracker-app/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","webpack://expense-tracker-app/./src/components/CategoriesModal/CategoriesModal.module.css?8937","components/CategoriesModal/CategoriesModal.jsx","webpack://expense-tracker-app/./src/components/TransactionForm/TransactionForm.module.css?2486","components/TransactionForm/TransactionForm.jsx","js/countCategories.js","js/getCurrentMonth.js","js/getColors.js","webpack://expense-tracker-app/./src/components/TransactionsChart/TransactionsChart.module.css?4b74","components/TransactionsChart/TransactionsChart.jsx","webpack://expense-tracker-app/./src/components/TransactionsTotal/TransactionsTotal.module.css?148f","components/TransactionsTotal/TransactionsTotal.jsx","webpack://expense-tracker-app/./src/components/UniversalButton/UniversalButton.module.css?5d74","components/UniversalButton/UniversalButton.jsx","js/getPath.js","js/getCurrency.js","js/getFormattedDate.js","js/getFormattedTime.js","schemas/validationSchema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"containerImg\":\"BgImageWrapper_containerImg__2XDcO\",\"containerSvg\":\"BgImageWrapper_containerSvg__wChVN\",\"icon\":\"BgImageWrapper_icon__Y-tXs\",\"containerText\":\"BgImageWrapper_containerText__dogbM\",\"moveBox\":\"BgImageWrapper_moveBox__FESZv\",\"containerBalance\":\"BgImageWrapper_containerBalance__+jgEq\",\"text\":\"BgImageWrapper_text__fXYZe\",\"balance\":\"BgImageWrapper_balance__6EXKP\",\"containerPercent\":\"BgImageWrapper_containerPercent__ovNOW\",\"percent\":\"BgImageWrapper_percent__8LxOt\"};","import React, { useState, useRef, useEffect } from 'react';\n\nimport { Icon } from '../Icon/Icon';\nimport { randomNumber, randomPercentage } from '../../js/getRandomNumber';\nimport style from './BgImageWrapper.module.css';\n\nexport const BgImageWrapper = () => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [animationDuration] = useState(15);\n  const [randomSum, setRandomSum] = useState(0);\n  const [randomPercent, setRandomPercent] = useState(0);\n  const animationRef = useRef(null);\n  const startTimeRef = useRef(null);\n  const viewportWidthRef = useRef(window.innerWidth);\n\n  useEffect(() => {\n    setRandomSum(randomNumber());\n    setRandomPercent(randomPercentage());\n  }, [currentStep]);\n\n  const handleAnimationStart = () => {\n    const viewportWidth = window.innerWidth;\n    viewportWidthRef.current = viewportWidth;\n\n    if (viewportWidth < 768) {\n      return;\n    }\n\n    startTimeRef.current = performance.now();\n    animationRef.current = requestAnimationFrame(updateAnimationProgress);\n  };\n\n  const updateAnimationProgress = () => {\n    const elapsedTime = performance.now() - startTimeRef.current;\n    const percentage = (elapsedTime / (animationDuration * 1000)) * 100;\n\n    // Check if viewport width has changed during the animation\n    if (\n      viewportWidthRef.current !== window.innerWidth &&\n      window.innerWidth < 768\n    ) {\n      return;\n    }\n\n    updateCurrentStep(percentage);\n\n    animationRef.current = requestAnimationFrame(updateAnimationProgress);\n  };\n\n  const updateCurrentStep = percentage => {\n    setCurrentStep(prevStep => {\n      const newStep = Math.ceil(percentage / 12.5);\n      return newStep !== prevStep ? newStep : prevStep;\n    });\n  };\n\n  return (\n    <div className={style.containerImg}>\n      <div\n        className={style.containerText}\n        onAnimationStart={handleAnimationStart}\n      >\n        <div className={style.containerSvg}>\n          <Icon name=\"arrow-up\" className={style.icon} size=\"18\" />\n        </div>\n        <div className={style.containerBalance}>\n          <p className={style.text}>Your balance</p>\n          <p className={style.balance}>{`$${randomSum}`}</p>\n        </div>\n        <div className={style.containerPercent}>\n          <p className={style.percent}>{`+${randomPercent.toFixed(2)}%`}</p>\n        </div>\n        <p className={style.dynamicText}></p>\n      </div>\n    </div>\n  );\n};\n","export const randomNumber = () => {\n  const randomNumber = Math.random() * (999 - 100) + 100;\n  return randomNumber.toFixed(3);\n};\nexport const randomPercentage = () => Math.random() * (100 - 1) + 1;\n","// components/PieChart/PieChart.jsx\nimport { PieChart, Pie, Cell } from 'recharts';\nimport { useMemo } from 'react';\n\nexport const Chart = ({ data }) => {\n  const chartData = useMemo(() => data, [data]);\n\n  return (\n    <PieChart width={292} height={150}>\n      <Pie\n        dataKey=\"value\"\n        data={chartData}\n        startAngle={180}\n        endAngle={0}\n        cy={140}\n        innerRadius={95}\n        outerRadius={145}\n        paddingAngle={-10}\n        cornerRadius={10}\n        fill=\"#15151b\"\n        stroke=\"none\"\n      >\n        {chartData.map((entry, index) => (\n          <Cell\n            style={{ outline: 'none' }}\n            key={`cell-${index}`}\n            fill={entry.color}\n          />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n};\n\nexport default Chart;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__w0Atp\",\"containerImg\":\"RegisterForm_containerImg__NqqMr\",\"containerTitle\":\"RegisterForm_containerTitle__yYLbM\",\"title\":\"RegisterForm_title__EvDyW\",\"text\":\"RegisterForm_text__cFC0o\",\"form\":\"RegisterForm_form__Tv43W\",\"containerForm\":\"RegisterForm_containerForm__OE-P+\",\"input\":\"RegisterForm_input__FsgBz\",\"containerIcon\":\"RegisterForm_containerIcon__sm6ah\",\"icon\":\"RegisterForm_icon__Xn6st\",\"button\":\"RegisterForm_button__B3hFq\",\"containerLink\":\"RegisterForm_containerLink__P82tD\",\"link\":\"RegisterForm_link__xu2eW\",\"span\":\"RegisterForm_span__L8jVb\",\"successInput\":\"RegisterForm_successInput__CuHET\",\"errorInput\":\"RegisterForm_errorInput__LuqSs\",\"successIcon\":\"RegisterForm_successIcon__J33Wc\",\"errorIcon\":\"RegisterForm_errorIcon__HFULE\",\"messageErr\":\"RegisterForm_messageErr__-+9wz\",\"messageSec\":\"RegisterForm_messageSec__nVTAy\"};","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classNames from 'classnames';\nimport { toast } from 'react-toastify';\nimport { BgImageWrapper } from '../../components/BgImageWrapper/BgImageWrapper';\nimport { Icon } from '../../components/Icon/Icon';\nimport { logIn, registerUser } from '../../redux/Auth/operations';\nimport { signUpSchema, signInSchema } from '../../schemas/validationSchema';\nimport style from './RegisterForm.module.css';\n\nconst RegisterForm = ({ signUp }) => {\n  const [showPass, setShowPass] = useState(false);\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors, dirtyFields },\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(signUp ? signUpSchema : signInSchema),\n  });\n  let navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const inputClass = fieldName => {\n    return classNames({\n      [`${style.input}`]: true,\n      [`${style.errorInput}`]:\n        errors[fieldName]?.message && dirtyFields[fieldName],\n      [`${style.successInput}`]:\n        !errors[fieldName]?.message && dirtyFields[fieldName],\n    });\n  };\n\n  const renderMessage = fieldName => {\n    if (errors[fieldName]?.message && dirtyFields[fieldName]) {\n      return <p className={style.messageErr}>{errors[fieldName]?.message}</p>;\n    }\n    return (\n      <p className={style.messageSec}>\n        {!errors[fieldName]?.message && dirtyFields[fieldName]\n          ? `${fieldName.charAt(0).toUpperCase()}${fieldName.slice(\n              1\n            )} is entered correct`\n          : ''}\n      </p>\n    );\n  };\n\n  const onSubmit = data => {\n    const { name, email, password } = data;\n\n    const userData = {\n      email,\n      password,\n    };\n\n    if (signUp) {\n      userData.name = name;\n    }\n\n    dispatch(signUp ? registerUser(userData) : logIn(userData))\n      .unwrap()\n      .then(userName => {\n        reset();\n        toast.success(\n          signUp\n            ? `Welcome, ${userName.name}!`\n            : `Welcome, ${userName.user.name}!`\n        );\n        signUp && navigate('/login');\n      })\n      .catch(error => {\n        if (error.response.status === 400) {\n          toast.error('Invalid data. Please check your input.');\n        } else if (error.response.status === 409) {\n          toast.error('User already exists. Please choose a different email.');\n        } else if (error.response.status === 403) {\n          toast.error('Invalid password.');\n        } else {\n          toast.error('An error occurred. Please try again later.');\n        }\n      });\n  };\n\n  return (\n    <div className={style.container}>\n      <div className={style.containerImg}>\n        <BgImageWrapper />\n      </div>\n      <div>\n        <div className={style.containerTitle}>\n          <h2 className={style.title}>{signUp ? 'Sign Up' : 'Sign In'}</h2>\n          <p className={style.text}>\n            {signUp\n              ? 'Step into a world of hassle-free expense management! Your journey towards financial mastery begins here.'\n              : 'Welcome back to effortless expense tracking! Your financial dashboard awaits.'}\n          </p>\n        </div>\n        <div className={style.containerForm}>\n          <div className={style.container}>\n            <form onSubmit={handleSubmit(onSubmit)} className={style.form}>\n              {signUp && (\n                <div className={style.containerIcon}>\n                  <input\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    className={inputClass('name')}\n                    {...register('name')}\n                  />\n                  {!errors.name?.message && dirtyFields.name && (\n                    <Icon\n                      name=\"success\"\n                      size=\"16\"\n                      className={style.successIcon}\n                    />\n                  )}\n                  {errors.name?.message && dirtyFields.name && (\n                    <Icon name=\"error\" size=\"16\" className={style.errorIcon} />\n                  )}\n                  {renderMessage('name')}\n                </div>\n              )}\n\n              <div className={style.containerIcon}>\n                <input\n                  name=\"email\"\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  className={inputClass('email')}\n                  {...register('email')}\n                />\n                {!errors.email?.message && dirtyFields.email && (\n                  <Icon\n                    name=\"success\"\n                    size=\"16\"\n                    className={style.successIcon}\n                  />\n                )}\n                {errors.email?.message && dirtyFields.email && (\n                  <Icon name=\"error\" size=\"16\" className={style.errorIcon} />\n                )}\n                {renderMessage('email')}\n              </div>\n              <div>\n                <div className={style.containerIcon}>\n                  <input\n                    name=\"password\"\n                    type={showPass ? 'text' : 'password'}\n                    placeholder=\"Password\"\n                    className={inputClass('password')}\n                    {...register('password')}\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPass(prev => !prev)}\n                  >\n                    {showPass ? (\n                      <Icon name=\"eye\" className={style.icon} size=\"16\" />\n                    ) : (\n                      <Icon name=\"eye-off\" className={style.icon} size=\"16\" />\n                    )}\n                  </button>\n                  {renderMessage('password')}\n                </div>\n              </div>\n              <div className={style.containerButton}>\n                <button type=\"submit\" className={style.button}>\n                  {signUp ? 'Sign Up' : 'Sign In'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className={style.containerLink}>\n          <NavLink className={style.link} to={signUp ? '/login' : '/register'}>\n            {signUp ? 'Already have an account?' : \"Don't have an account?\"}{' '}\n            <span className={style.span}>{signUp ? 'Sign In' : 'Sign Up'}</span>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"mainBox\":\"CategoriesModal_mainBox__Zfe33\",\"box\":\"CategoriesModal_box__ZGfVW\",\"mainTitle\":\"CategoriesModal_mainTitle__TN5lI\",\"title\":\"CategoriesModal_title__7dUMC\",\"listWrapper\":\"CategoriesModal_listWrapper__U704O\",\"noobjects\":\"CategoriesModal_noobjects__DgZzo\",\"noobjectsP\":\"CategoriesModal_noobjectsP__Yh4Zh\",\"listItem\":\"CategoriesModal_listItem__zk9xA\",\"listSVG\":\"CategoriesModal_listSVG__eQgow\",\"buttonSVG\":\"CategoriesModal_buttonSVG__dGXre\",\"icon\":\"CategoriesModal_icon__dTPTH\",\"labelCategory\":\"CategoriesModal_labelCategory__L+-6L\",\"inputCategory\":\"CategoriesModal_inputCategory__BsVb4\",\"subbmitButton\":\"CategoriesModal_subbmitButton__Xilkt\",\"formStyle\":\"CategoriesModal_formStyle__TZCQq\",\"inputBox\":\"CategoriesModal_inputBox__ZojVH\"};","import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport {\n  addCategory,\n  deleteCategory,\n  editCategory,\n} from '../../redux/Category/operations';\nimport { selectCategories } from '../../redux/Category/categorySlice';\nimport { Icon } from '../../components/Icon/Icon';\nimport style from './CategoriesModal.module.css';\nimport { getTransactions } from '../../redux/Transaction/operations';\n\nexport const CategoriesModal = ({ type, transportCategory }) => {\n  const categories = useSelector(selectCategories);\n\n  const dispatch = useDispatch();\n  const ulRef = useRef(null);\n\n  const [categoryName, setCategoryName] = useState('');\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [categoryId, setCategoryId] = useState(null);\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  const handleSubmitCategory = e => {\n    e.preventDefault();\n    if (categoryName.length > 16) {\n      toast.error(\n        'Category name length must be less than or equal to 16 characters long'\n      );\n      return;\n    }\n\n    if (isEditMode) {\n      dispatch(editCategory({ categoryName, categoryId }))\n        .unwrap()\n        .then(() => {\n          dispatch(getTransactions({ type }));\n          setIsEditMode(false);\n        })\n        .catch(error => toast.error('Error editing category'));\n    } else {\n      dispatch(addCategory({ type, categoryName }))\n        .unwrap()\n        .then(() => {\n          toast.success('New Category added successfully');\n\n          ulRef.current.scrollTo({\n            top: ulRef.current.scrollHeight,\n            behavior: 'smooth',\n          });\n        })\n        .catch(error => toast.error('Error adding category'));\n    }\n    setCategoryName('');\n  };\n\n  const handleInputChange = event => {\n    setCategoryName(event.target.value);\n  };\n\n  const handleChangeCategory = (id, categoryName) => {\n    setCategoryName(categoryName);\n    setCategoryId(id);\n\n    setIsEditMode(true);\n  };\n\n  const handleGetCategory = item => {\n    transportCategory(item);\n  };\n\n  const handleDeleteCategory = (id, type) => {\n    setIsEditMode(false);\n    setIsButtonDisabled(true);\n\n    dispatch(deleteCategory({ id, type }))\n      .unwrap()\n      .then(() => toast.success('Category deleted successfully'))\n      .catch(error => {\n        toast.error('Cannot delete category with existing transactions');\n      })\n      .finally(setIsButtonDisabled(false));\n  };\n  useEffect(() => {\n    if (!isEditMode) {\n      setCategoryName('');\n    }\n  }, [isEditMode]);\n\n  return (\n    <div className={style.mainBox}>\n      <div className={style.box}>\n        <h2 className={style.mainTitle}>\n          {type === 'expenses' ? 'Expenses' : 'Incomes'}\n        </h2>\n        <h3 className={style.title}>All Category</h3>\n\n        <ul className={`${style.listWrapper} scroll scrollB`} ref={ulRef}>\n          {categories[type].length === 0 ? (\n            <li className={style.noobjects}>\n              <p className={style.noobjectsP}>There are no categories</p>\n            </li>\n          ) : (\n            categories[type].map(item => (\n              <li className={style.listItem} key={item._id}>\n                <p>{item.categoryName}</p>\n\n                <ul className={style.listSVG}>\n                  <li className={style.listSVGitem}>\n                    <button\n                      className={style.buttonSVG}\n                      onClick={() => handleGetCategory(item)}\n                    >\n                      <Icon className={style.icon} name=\"check\" size=\"16\" />\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      className={style.buttonSVG}\n                      onClick={() =>\n                        handleChangeCategory(item._id, item.categoryName)\n                      }\n                    >\n                      <Icon className={style.icon} name=\"edit\" size=\"16\" />\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      className={style.buttonSVG}\n                      onClick={() => handleDeleteCategory(item._id, type)}\n                      disabled={isButtonDisabled}\n                    >\n                      <Icon className={style.icon} name=\"trash-bin\" size=\"16\" />\n                    </button>\n                  </li>\n                </ul>\n              </li>\n            ))\n          )}\n        </ul>\n      </div>\n\n      <form className={style.formStyle} onSubmit={handleSubmitCategory}>\n        <label className={style.labelCategory} htmlFor=\"categoryInput\">\n          {isEditMode ? 'Edit Category' : 'New Category'}\n        </label>\n        <div className={style.inputBox}>\n          <input\n            type=\"text\"\n            id=\"categoryInput\"\n            placeholder=\"Enter the text\"\n            className={style.inputCategory}\n            onChange={handleInputChange}\n            value={categoryName}\n          />\n\n          <button\n            className={style.subbmitButton}\n            type=\"submit\"\n            disabled={categoryName.length === 0}\n          >\n            {isEditMode ? 'Edit' : 'Add'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"TransactionForm_formWrapper__dJW4L\",\"transactionForm\":\"TransactionForm_transactionForm__sq0n7\",\"commentField\":\"TransactionForm_commentField__jz17L\",\"typeLabel\":\"TransactionForm_typeLabel__xEpZh\",\"transactionTypes\":\"TransactionForm_transactionTypes__+X4q-\",\"customRadioBtn\":\"TransactionForm_customRadioBtn__LqsSV\",\"radioLabel\":\"TransactionForm_radioLabel__G3oR-\",\"radioBtn\":\"TransactionForm_radioBtn__02koV\",\"customFields\":\"TransactionForm_customFields__ZH0up\",\"customField\":\"TransactionForm_customField__R60kZ\",\"datePicker\":\"TransactionForm_datePicker__zE4sc\",\"datepickerContainer\":\"TransactionForm_datepickerContainer__NhIVf\",\"react-datepicker__calendar\":\"TransactionForm_react-datepicker__calendar__OSKfp\",\"timeField\":\"TransactionForm_timeField__zhVdO\",\"categoryField\":\"TransactionForm_categoryField__rZdjV\",\"fieldWrapper\":\"TransactionForm_fieldWrapper__rFSik\",\"sumLabel\":\"TransactionForm_sumLabel__W2tJp\",\"iconDate\":\"TransactionForm_iconDate__ygxny\",\"iconTime\":\"TransactionForm_iconTime__F8-gz\",\"sumInput\":\"TransactionForm_sumInput__4jseR\",\"currency\":\"TransactionForm_currency__wL7Ly\",\"submitBtn\":\"TransactionForm_submitBtn__YfJho\",\"errorField\":\"TransactionForm_errorField__aGdMb\",\"messageError\":\"TransactionForm_messageError__0Ha4P\"};","import { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useModal } from 'hooks';\nimport DatePicker from 'react-datepicker';\nimport classNames from 'classnames';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useNavigate } from 'react-router-dom';\nimport { Icon, Modal } from 'components';\nimport { CategoriesModal } from '../CategoriesModal/CategoriesModal';\nimport { selectUser } from '../../redux/User/userSlice';\nimport { getFormattedDate, getFormattedTime } from '../../js';\nimport { selectTransactionsError } from '../../redux/Transaction/transactionSlice';\nimport { transactionSchema } from '../../schemas/validationSchema';\nimport style from './TransactionForm.module.css';\n\nexport const TransactionForm = ({\n  transaction,\n  transactionsType,\n  onSubmitForm,\n  history,\n}) => {\n  const user = useSelector(selectUser);\n  const isError = useSelector(selectTransactionsError);\n  const { currency } = user;\n  const [categoryId, setCategoryId] = useState('');\n  const [isOpenModalTransaction, toggleModalTransaction] = useModal();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    getValues,\n    control,\n    formState: { errors },\n    clearErrors,\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(transactionSchema),\n  });\n  const navigate = useNavigate();\n\n  const clearFieldCategory = useCallback(\n    type => {\n      setValue('category', '');\n      setCategoryId('');\n      navigate(`/transactions/${type}`);\n    },\n    [setValue, setCategoryId, navigate]\n  );\n\n  const setDefaultValues = useCallback(() => {\n    setValue('type', transactionsType);\n    setValue('date', getFormattedDate(new Date()));\n    setValue('time', getFormattedTime());\n    setValue('category', '');\n    setCategoryId('');\n    setValue('sum', '');\n    setValue('comment', '');\n    clearErrors();\n  }, [setValue, setCategoryId, transactionsType, clearErrors]);\n\n  useEffect(() => {\n    if (!transaction) {\n      setDefaultValues();\n    }\n\n    if (transaction) {\n      const { type, date, time, category, sum, comment } = transaction;\n\n      setCategoryId(category?._id);\n      setValue('type', type);\n      setValue('date', date);\n      setValue('time', time);\n      setValue('category', category.categoryName);\n      setValue('sum', sum);\n      setValue('comment', comment);\n    }\n  }, [transaction, setValue, setDefaultValues]);\n\n  const handleChangeCategory = item => {\n    setValue('category', item.categoryName, { shouldValidate: true });\n    setCategoryId(item._id);\n    toggleModalTransaction();\n  };\n\n  const handleChangeDate = date => {\n    const formattedDate = getFormattedDate(date);\n    setValue('date', formattedDate, { shouldValidate: true });\n  };\n\n  const onSubmit = data => {\n    data.category = categoryId;\n\n    if (transaction) {\n      data._id = transaction._id;\n    }\n\n    onSubmitForm(data);\n\n    if (!isError && !transaction) {\n      reset();\n      setDefaultValues();\n    }\n  };\n\n  const fieldClasses = fieldName => {\n    return classNames({\n      [`${\n        style[fieldName !== 'date' ? `${fieldName + 'Field'}` : 'datePicker']\n      }`]: true,\n      [`${style.errorField}`]: errors[fieldName]?.message,\n    });\n  };\n\n  const renderMessage = fieldName => {\n    if (errors[fieldName]?.message) {\n      return <p className={style.messageError}>{errors[fieldName]?.message}</p>;\n    }\n  };\n\n  const radioBtnExpenses = classNames({\n    [`${style.typeLabel}`]: true,\n    [`${style.radioLabel}`]:\n      transaction?.type === 'incomes' || history === 'incomes',\n  });\n\n  const radioBtnIncomes = classNames({\n    [`${style.typeLabel}`]: true,\n    [`${style.radioLabel}`]:\n      transaction?.type === 'expenses' || history === 'expenses',\n  });\n\n  return (\n    <div>\n      <div className={style.formWrapper}>\n        <form\n          className={style.transactionForm}\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <div className={style.transactionTypes}>\n            <label className={radioBtnExpenses}>\n              <input\n                className={style.radioBtn}\n                type=\"radio\"\n                name=\"type\"\n                value=\"expenses\"\n                {...register('type')}\n                disabled={\n                  transaction?.type === 'incomes' || history === 'incomes'\n                }\n                onChange={() => clearFieldCategory('expenses')}\n              />\n              <span className={style.customRadioBtn}></span>\n              Expense\n            </label>\n            <label className={radioBtnIncomes}>\n              <input\n                className={style.radioBtn}\n                type=\"radio\"\n                name=\"type\"\n                value=\"incomes\"\n                {...register('type')}\n                disabled={\n                  transaction?.type === 'expenses' || history === 'expenses'\n                }\n                onChange={() => clearFieldCategory('incomes')}\n              />\n              <span className={style.customRadioBtn}></span>\n              Income\n            </label>\n          </div>\n          <div className={style.customFields}>\n            <label className={style.customField}>\n              Date\n              <Controller\n                control={control}\n                name=\"date\"\n                render={({ field }) => (\n                  <div className=\"datepickerContainer\">\n                    <DatePicker\n                      className={fieldClasses('date')}\n                      showPopperArrow={false}\n                      maxDate={new Date()}\n                      selected={field.value}\n                      placeholderText=\"mm/dd/yyyy\"\n                      onChange={date => {\n                        field.onChange(date);\n                        handleChangeDate(date);\n                      }}\n                      calendarClassName=\"fixed-height-calendar\"\n                    />\n                  </div>\n                )}\n              />\n              <Icon name=\"calendar\" className={style.iconDate} size=\"16\" />\n              {renderMessage('date')}\n            </label>\n            <label className={style.customField}>\n              Time\n              <input\n                className={fieldClasses('time')}\n                type=\"time\"\n                name=\"time\"\n                {...register('time')}\n              />\n              <Icon name=\"clock\" className={style.iconTime} size=\"16\" />\n              {renderMessage('time')}\n            </label>\n          </div>\n          <div className={style.fieldWrapper}>\n            <label>Category</label>\n            <input\n              className={fieldClasses('category')}\n              type=\"text\"\n              name=\"category\"\n              placeholder=\"Different\"\n              autoComplete=\"off\"\n              {...register('category')}\n              required\n              readOnly\n              onClick={toggleModalTransaction}\n            />\n            {renderMessage('category')}\n          </div>\n          <div>\n            <label className={style.sumLabel}>\n              Sum\n              <input\n                className={fieldClasses('sum')}\n                type=\"number\"\n                name=\"sum\"\n                placeholder=\"Enter the sum\"\n                autoComplete=\"off\"\n                {...register('sum')}\n              />\n              <span className={style.currency}>{currency?.toUpperCase()}</span>\n              {renderMessage('sum')}\n            </label>\n          </div>\n          <div className={style.fieldWrapper}>\n            <label>Comment</label>\n            <textarea\n              className={fieldClasses('comment')}\n              name=\"comment\"\n              placeholder=\"Enter the text\"\n              {...register('comment')}\n            />\n            {renderMessage('comment')}\n          </div>\n          <button\n            className={style.submitBtn}\n            type=\"submit\"\n            disabled={Object.entries(errors).length}\n          >\n            {transaction ? 'Save' : 'Add'}\n          </button>\n        </form>\n      </div>\n      {isOpenModalTransaction && (\n        <Modal toggleModal={toggleModalTransaction}>\n          <CategoriesModal\n            transportCategory={handleChangeCategory}\n            type={getValues('type')}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import { getColors } from './getColors';\nimport { getCurrentMoth } from './getCurrentMonth';\n\nexport function countCategories(data, total) {\n  if (!data.length) return [];\n\n  const categorySum = {};\n  const { firstDayOfMonth, lastDayOfMonth } = getCurrentMoth();\n\n  const currentMonthTransactions = data.filter(\n    item => item.date >= firstDayOfMonth && item.date <= lastDayOfMonth\n  );\n\n  if (!currentMonthTransactions.length) return [];\n\n  currentMonthTransactions.forEach(transaction => {\n    const { category, sum } = transaction;\n    if (categorySum[category.categoryName]) {\n      categorySum[category.categoryName] += sum;\n    } else {\n      categorySum[category.categoryName] = sum;\n    }\n  });\n\n  const categoriesData = [];\n\n  Object.entries(categorySum).forEach(([key, value]) => {\n    let percent = Number(((value / total) * 100).toFixed(1));\n    categoriesData.push({ name: key, value: percent });\n  });\n\n  const sumPercentages = categoriesData.reduce(\n    (total, item) => total + item.value,\n    0\n  );\n\n  const sortedCategories = categoriesData.sort((a, b) => b.value - a.value);\n\n  if (sumPercentages !== 100) {\n    const diff = 100 - sumPercentages;\n\n    if (sortedCategories[sortedCategories.length - 1].value > 1) {\n      sortedCategories[sortedCategories.length - 1].value = Number(\n        (sortedCategories[sortedCategories.length - 1].value + diff).toFixed(1)\n      );\n    } else {\n      sortedCategories[sortedCategories.length - 1].value = 0.1;\n    }\n  }\n\n  return getColors(sortedCategories);\n}\n","import { endOfMonth, format, startOfMonth } from 'date-fns';\n\nexport function getCurrentMoth() {\n  const currentDate = new Date();\n  const firstDayOfMonth = format(startOfMonth(currentDate), 'yyyy-MM-dd');\n  const lastDayOfMonth = format(endOfMonth(currentDate), 'yyyy-MM-dd');\n\n  return { firstDayOfMonth, lastDayOfMonth };\n}\n","export function getColors(data) {\n  const colors = [\n    '#008000 ',\n    '#32CD32',\n    '#00FA9A',\n    '#98FB98',\n    '#228B22',\n    '#2E8B57',\n    '#3CB371',\n    '#00FF7F',\n    '#66CDAA',\n    '#8FBC8F',\n    '#2F4F4F',\n    '#aabaaa',\n    '#dbf0db',\n    '#777f77',\n    '#5a5e5a',\n  ];\n\n  data.map((item, index) => (item.color = colors[index]));\n\n  return data;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"chartContainer\":\"TransactionsChart_chartContainer__Dm1QE\",\"title\":\"TransactionsChart_title__HJ11O\",\"statsWrapper\":\"TransactionsChart_statsWrapper__HcGTQ\",\"pieChartWrapper\":\"TransactionsChart_pieChartWrapper__g1yw6\",\"chartDescr\":\"TransactionsChart_chartDescr__65Wcs\",\"list\":\"TransactionsChart_list__X+rU0\",\"listItem\":\"TransactionsChart_listItem__JJwTm\",\"wrapperMarker\":\"TransactionsChart_wrapperMarker__Zw1W2\",\"itemDescr\":\"TransactionsChart_itemDescr__nrjb-\",\"itemSpan\":\"TransactionsChart_itemSpan__Hm8D6\",\"warningWrapper\":\"TransactionsChart_warningWrapper__levm-\",\"warningTitle\":\"TransactionsChart_warningTitle__1Dkxd\",\"imgNoData\":\"TransactionsChart_imgNoData__wc4-e\",\"imgNoTransactions\":\"TransactionsChart_imgNoTransactions__+BFMx\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useRef, useState } from 'react';\nimport { Chart } from '../PieChart/PieChart';\nimport { countCategories } from '../../js/countCategories';\nimport {\n  selectTransactions,\n  selectTransactionsError,\n} from '../../redux/Transaction/transactionSlice';\nimport { selectUser } from '../../redux/User/userSlice';\nimport { fetchCurrentUser } from '../../redux/User/operations';\nimport warningImg from '../../assets/images/no_data_abstract.png';\nimport errorImg from '../../assets/images/server-error.png';\nimport style from './TransactionsChart.module.css';\n\nexport const TransactionsChart = ({ transactionsType }) => {\n  const [categoriesData, setCategoriesData] = useState(null);\n  const dispatch = useDispatch();\n\n  const { totalIncomes, totalExpenses } = useSelector(selectUser);\n  const error = useSelector(selectTransactionsError);\n  const data = useSelector(selectTransactions);\n\n  const totalRef = useRef(\n    transactionsType === 'Incomes' ? totalIncomes : totalExpenses\n  );\n\n  useEffect(() => {\n    totalRef.current =\n      transactionsType === 'Incomes' ? totalIncomes : totalExpenses;\n  }, [totalIncomes, totalExpenses, transactionsType]);\n\n  useEffect(() => {\n    if (data === null) return;\n\n    dispatch(fetchCurrentUser())\n      .unwrap()\n      .then(() => {\n        setCategoriesData(countCategories(data, totalRef.current));\n      })\n      .catch();\n  }, [data, dispatch]);\n\n  if (data === null || categoriesData === null) return;\n\n  if (error)\n    return (\n      <div className={style.warningWrapper}>\n        <h2 className={style.warningTitle}>\n          Sorry, something went wrong. Please try again...\n        </h2>\n        <img className={style.imgNoData} src={errorImg} alt=\"Error fetch\" />\n      </div>\n    );\n\n  return !categoriesData.length ? (\n    <div className={style.warningWrapper}>\n      <h2 className={style.warningTitle}>\n        You don't have any {transactionsType.toLowerCase()} in this month.\n      </h2>\n      <img className={style.imgNoTransactions} src={warningImg} alt=\"No data\" />\n    </div>\n  ) : (\n    <div className={style.chartContainer}>\n      <h3 className={style.title}>{transactionsType} categories</h3>\n      <div className={style.statsWrapper}>\n        <div className={style.pieChartWrapper}>\n          <Chart data={categoriesData} />\n          <p className={style.chartDescr}>100%</p>\n        </div>\n        <ul className={`${style.list} scroll scrollA`}>\n          {categoriesData.map((item, index) => (\n            <li className={style.listItem} key={index}>\n              <div\n                className={style.wrapperMarker}\n                style={{ backgroundColor: item.color }}\n              ></div>\n              <p className={style.itemDescr}>{item.name}</p>\n              <p className={style.itemSpan}>{item.value}%</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"TransactionsTotal_link__2Zd-o\",\"iconContainer\":\"TransactionsTotal_iconContainer__hBCHo\",\"icon\":\"TransactionsTotal_icon__ibCfE\",\"list\":\"TransactionsTotal_list__No+i2\",\"listItem\":\"TransactionsTotal_listItem__Wuqp-\",\"amountTitle\":\"TransactionsTotal_amountTitle__xm2gd\",\"amountDescr\":\"TransactionsTotal_amountDescr__ck70l\"};","import { Link, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport { Icon } from 'components';\nimport { selectUser } from '../../redux/User/userSlice';\nimport { getCurrencyChar, getPath } from '../../js';\n\nimport style from './TransactionsTotal.module.css';\n\nexport const TransactionsTotal = ({\n  totalAllExpenses = null,\n  totalAllIncomes = null,\n}) => {\n  const [path, setPath] = useState({});\n  const location = useLocation();\n\n  const { totalIncomes, totalExpenses, currency } = useSelector(selectUser);\n  const currencyChar = getCurrencyChar(currency);\n\n  useEffect(() => {\n    setPath(getPath(location));\n  }, [location]);\n\n  return (\n    <div className={style.wrapper}>\n      <ul className={style.list}>\n        <li className={style.listItem}>\n          <Link className={style.link} to={path.incomes}>\n            <div className={style.iconContainer}>\n              <Icon className={style.icon} name=\"arrow-up\" size=\"18\" />\n            </div>\n          </Link>\n          <div>\n            <h3 className={style.amountTitle}>Total Income</h3>\n            <p className={style.amountDescr}>\n              {currencyChar}\n              {totalAllIncomes || totalIncomes}\n            </p>\n          </div>\n        </li>\n        <li className={style.listItem}>\n          <Link className={style.link} to={path.expenses}>\n            <div className={style.iconContainer}>\n              <Icon className={style.icon} name=\"arrow-down\" size=\"18\" />\n            </div>\n          </Link>\n          <div>\n            <h3 className={style.amountTitle}>Total Expense</h3>\n            <p className={style.amountDescr}>\n              {currencyChar}\n              {totalAllExpenses || totalExpenses}\n            </p>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"UniversalButton_button__Lr2wi\",\"btnIcon\":\"UniversalButton_btnIcon__xP+G4\"};","import { GrPowerReset } from 'react-icons/gr';\nimport { MdAddCard } from 'react-icons/md';\nimport style from './UniversalButton.module.css';\n\nexport const UniversalButton = ({ action, type }) => {\n  return (\n    <button onClick={action} type=\"button\" className={style.button}>\n      {type === 'reset' ? (\n        <GrPowerReset className={style.btnIcon} />\n      ) : (\n        <MdAddCard className={style.btnIcon} />\n      )}\n    </button>\n  );\n};\n","export function getPath(location) {\n  const path = {};\n  if (\n    location.pathname === '/transactions/incomes' ||\n    location.pathname === '/transactions/expenses'\n  ) {\n    path.expenses = '/transactions/expenses';\n    path.incomes = '/transactions/incomes';\n  } else {\n    path.expenses = '/transactions/history/expenses';\n    path.incomes = '/transactions/history/incomes';\n  }\n  return path;\n}\n","export function getCurrencyChar(currency) {\n  switch (currency) {\n    case 'uah':\n      return '₱';\n    case 'usd':\n      return '$';\n    case 'eur':\n      return '€';\n    default:\n      break;\n  }\n}\n","export const getFormattedDate = date => {\n  if (!date) return;\n\n  if (typeof date === 'string') {\n    const parts = date.split('-');\n    const year = parseInt(parts[0], 10);\n    const month = parseInt(parts[1], 10) - 1;\n    const day = parseInt(parts[2], 10);\n\n    return new Date(year, month, day);\n  }\n\n  const year = date.getFullYear();\n  let month = (date.getMonth() + 1).toString().padStart(2, '0');\n  let day = date.getDate().toString().padStart(2, '0');\n\n  return `${year}-${month}-${day}`;\n};\n","export const getFormattedTime = () => {\n  const currentDate = new Date();\n  const hours = String(currentDate.getHours()).padStart(2, '0');\n  const minutes = String(currentDate.getMinutes()).padStart(2, '0');\n\n  return `${hours}:${minutes}`;\n};\n","import * as yup from 'yup';\n\nexport const signUpSchema = yup.object({\n  name: yup\n    .string()\n    .required('Name is required')\n    .min(2, 'Min length must be more than 2 chars')\n    .max(32, 'Max length must be less than 32 chars'),\n  email: yup\n    .string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .max(64, 'Max length must be less than 64 chars'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(8, 'Min length must be more than 8 chars')\n    .max(64, 'Max length must be less than 64 chars'),\n});\n\nexport const signInSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .max(64, 'Max length must be less than 64 chars'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(8, 'Min length must be more than 8 chars')\n    .max(64, 'Max length must be less than 64 chars'),\n});\n\nexport const transactionSchema = yup.object({\n  date: yup.string().required('Date is required'),\n  time: yup.string().required('Time is required'),\n  category: yup.string().required('Category is required'),\n  sum: yup\n    .string()\n    .matches(/^[1-9][0-9]*$/, 'Sum must be greater than 0')\n    .test('max', 'Sum must be less than or equal to 1000000', value => {\n      if (!value) return true;\n      const parsedValue = parseInt(value, 10);\n      return !isNaN(parsedValue) && parsedValue <= 1000000;\n    })\n    .required('Sum is required'),\n  comment: yup\n    .string()\n    .required('Comment is required')\n    .min(3, 'Comment length must be at least 3 characters long'),\n});\n"],"names":["BgImageWrapper","_useState","useState","_useState2","_slicedToArray","currentStep","setCurrentStep","_useState3","animationDuration","_useState5","_useState6","randomSum","setRandomSum","_useState7","_useState8","randomPercent","setRandomPercent","animationRef","useRef","startTimeRef","viewportWidthRef","window","innerWidth","useEffect","Math","random","toFixed","updateAnimationProgress","percentage","performance","now","current","updateCurrentStep","requestAnimationFrame","prevStep","newStep","ceil","_jsx","className","style","children","_jsxs","onAnimationStart","viewportWidth","Icon","name","size","concat","Chart","_ref","data","chartData","useMemo","PieChart","width","height","Pie","dataKey","startAngle","endAngle","cy","innerRadius","outerRadius","paddingAngle","cornerRadius","fill","stroke","map","entry","index","Cell","outline","color","_errors$name","_errors$name2","_errors$email","_errors$email2","signUp","showPass","setShowPass","_useForm","useForm","mode","resolver","yupResolver","signUpSchema","signInSchema","register","reset","handleSubmit","_useForm$formState","formState","errors","dirtyFields","navigate","useNavigate","dispatch","useDispatch","inputClass","fieldName","_errors$fieldName","_errors$fieldName2","_classNames","classNames","_defineProperty","message","renderMessage","_errors$fieldName3","_errors$fieldName5","_errors$fieldName4","charAt","toUpperCase","slice","onSubmit","userData","email","password","registerUser","logIn","unwrap","then","userName","toast","user","catch","error","response","status","_objectSpread","type","placeholder","onClick","prev","NavLink","to","CategoriesModal","transportCategory","categories","useSelector","selectCategories","ulRef","categoryName","setCategoryName","_useState4","isButtonDisabled","setIsButtonDisabled","categoryId","setCategoryId","isEditMode","setIsEditMode","ref","length","item","handleGetCategory","id","handleChangeCategory","_id","deleteCategory","finally","handleDeleteCategory","disabled","e","preventDefault","editCategory","getTransactions","addCategory","scrollTo","top","scrollHeight","behavior","htmlFor","onChange","event","target","value","TransactionForm","_classNames2","_classNames3","transaction","transactionsType","onSubmitForm","history","selectUser","isError","selectTransactionsError","currency","_useModal","useModal","_useModal2","isOpenModalTransaction","toggleModalTransaction","transactionSchema","setValue","getValues","control","clearErrors","clearFieldCategory","useCallback","setDefaultValues","getFormattedDate","Date","getFormattedTime","date","time","category","sum","comment","fieldClasses","radioBtnExpenses","radioBtnIncomes","Controller","render","_ref2","field","DatePicker","showPopperArrow","maxDate","selected","placeholderText","formattedDate","shouldValidate","handleChangeDate","calendarClassName","autoComplete","required","readOnly","Object","entries","Modal","toggleModal","countCategories","total","categorySum","_getCurrentMoth","currentDate","firstDayOfMonth","format","startOfMonth","lastDayOfMonth","endOfMonth","getCurrentMoth","currentMonthTransactions","filter","forEach","categoriesData","key","percent","Number","push","sumPercentages","reduce","sortedCategories","sort","a","b","diff","colors","getColors","TransactionsChart","setCategoriesData","_useSelector","totalIncomes","totalExpenses","selectTransactions","totalRef","fetchCurrentUser","src","errorImg","alt","backgroundColor","toLowerCase","warningImg","TransactionsTotal","_ref$totalAllExpenses","totalAllExpenses","_ref$totalAllIncomes","totalAllIncomes","path","setPath","location","useLocation","currencyChar","getCurrencyChar","getPath","Link","incomes","expenses","UniversalButton","action","GrPowerReset","MdAddCard","pathname","parts","split","year","parseInt","month","day","getFullYear","getMonth","toString","padStart","getDate","hours","String","getHours","minutes","getMinutes","yup","min","max","shape","matches","test","parsedValue","isNaN"],"sourceRoot":""}