{"version":3,"file":"static/js/647.2999e5dc.chunk.js","mappings":"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","sources":["components/TransactionsList/shorter.js","webpack://expense-tracker-app/./src/components/TransactionsList/TransactionsItem.module.css?6d6c","components/TransactionsList/TransactionsItem.jsx","webpack://expense-tracker-app/./src/components/TransactionsMessage/TransactionsMessage.module.css?ee09","components/TransactionsMessage/TransactionsMessage.jsx","webpack://expense-tracker-app/./src/components/TransactionsList/TransactionsList.module.css?185a","components/TransactionsList/TransactionsList.jsx","webpack://expense-tracker-app/./src/components/TransactionsSearchTools/TransactionsSearchTools.module.css?415c","components/TransactionsSearchTools/TransactionsSearchTools.jsx","webpack://expense-tracker-app/./src/pages/TransactionsHistory.module.css?8db3","pages/TransactionsHistory.jsx"],"sourcesContent":["export const Shorter = (str, windowSize) => {\n  let word = 7;\n  if (windowSize < 1440) {\n    word = 6;\n  }\n\n  if (str.length > word) {\n    return `${str.slice(0, word)}...`;\n  }\n  return str;\n};\n\nexport const ShorterDate = (str, windowSize) => {\n  if (windowSize < 1440) {\n    return `${str.slice(0, 5)}...`;\n  }\n  if (windowSize >= 1440) {\n    return `${str.slice(0, 14)}`;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btnContainer\":\"TransactionsItem_btnContainer__UNfGl\",\"btnTable\":\"TransactionsItem_btnTable__XeQbC\",\"iconEdit\":\"TransactionsItem_iconEdit__P4oDQ\",\"btnTableDel\":\"TransactionsItem_btnTableDel__x6bB8\",\"iconDelete\":\"TransactionsItem_iconDelete__8JaCH\",\"textEdit\":\"TransactionsItem_textEdit__ksdtF\",\"textCont\":\"TransactionsItem_textCont__izU75\",\"tr\":\"TransactionsItem_tr__4IAGQ\",\"td\":\"TransactionsItem_td__d+av-\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { Shorter, ShorterDate } from './shorter';\nimport {\n  deleteTransaction,\n  getTransactions,\n} from '../../redux/Transaction/operations';\nimport { Icon } from 'components';\nimport { fetchCurrentUser } from '../../redux/User/operations';\nimport style from './TransactionsItem.module.css';\nimport { selectCurrency } from '../../redux/User/userSlice';\nimport { useParams } from 'react-router-dom';\n\nexport const TransactionsItem = ({ item, handleOpenModal }) => {\n  const [windowSize, setWindowSize] = useState(window.innerWidth);\n  const { transactionsType } = useParams();\n\n  useEffect(() => {\n    function handleWindowResize() {\n      setWindowSize(window.innerWidth);\n    }\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n\n  const dispatch = useDispatch();\n\n  const handleDeleteTransaction = id => {\n    dispatch(deleteTransaction(id))\n      .unwrap()\n      .then(() => {\n        dispatch(fetchCurrentUser());\n        dispatch(getTransactions({ type: transactionsType }));\n        toast.success('Transaction deleted successfully');\n      })\n      .catch(error => toast.error('Something wrong !'));\n  };\n\n  const convertDate = dateString => {\n    const dateObj = new Date(dateString);\n    const days = ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'];\n    const dayOfWeek = days[dateObj.getDay()];\n    const day = dateObj.getDate();\n    const month = dateObj.getMonth() + 1;\n    const year = dateObj.getFullYear();\n    const formattedDate = `${dayOfWeek}, ${\n      day[0] === '0' ? day.substring(1) : day\n    }.${month.toString().padStart(2, '0')}.${year}`;\n    return formattedDate;\n  };\n\n  const currency = useSelector(selectCurrency);\n\n  return (\n    <ul className={style.tr} key={item._id}>\n      <li className={style.td}>\n        {Shorter(item.category.categoryName, windowSize)}\n      </li>\n      <li className={style.td}>{Shorter(item.comment, windowSize)}</li>\n      <li className={style.td}>\n        {ShorterDate(convertDate(item.date), windowSize)}\n      </li>\n      <li className={style.td}>{item.time}</li>\n      <li className={style.td}>\n        {item.sum} / {currency.toUpperCase()}\n      </li>\n      <li className={style.td}>\n        <div className={style.btnContainer}>\n          <button\n            className={style.btnTable}\n            onClick={() => handleOpenModal(item)}\n          >\n            <div className={style.textEdit}>Edit</div>\n            <Icon name=\"edit\" className={style.iconEdit} size=\"16\" />\n          </button>\n          <button\n            className={style.btnTableDel}\n            onClick={() => handleDeleteTransaction(item._id)}\n          >\n            <Icon name=\"trash-bin\" className={style.iconDelete} size=\"16\" />\n\n            <div className={style.textCont}>\n              <span>Delete</span>\n            </div>\n          </button>\n        </div>\n      </li>\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"TransactionsMessage_message__sY73g\"};","import style from './TransactionsMessage.module.css';\n\nexport const TransactionsMessage = ({ message }) => {\n  return <h2 className={style.message}>{message}</h2>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"containerTable\":\"TransactionsList_containerTable__rnVmV\",\"listTable\":\"TransactionsList_listTable__JzalU\",\"thead\":\"TransactionsList_thead__cvmoU\",\"th\":\"TransactionsList_th__pmFFm\",\"td\":\"TransactionsList_td__kiLvp\",\"tr\":\"TransactionsList_tr__8qRgO\",\"tbody\":\"TransactionsList_tbody__7w5DG\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useParams } from 'react-router-dom';\nimport { TransactionsItem } from './TransactionsItem';\nimport { selectFilter } from '../../redux/Filter/filterSlice';\nimport {\n  editTransaction,\n  getTransactions,\n} from '../../redux/Transaction/operations';\nimport { selectTransactions } from '../../redux/Transaction/transactionSlice';\nimport { useModal } from '../../hooks';\nimport { Modal } from '../Modal/Modal';\nimport { TransactionForm } from '../TransactionForm/TransactionForm';\nimport { fetchCurrentUser } from '../../redux/User/operations';\nimport { TransactionsMessage } from '../TransactionsMessage/TransactionsMessage';\nimport style from './TransactionsList.module.css';\n\nexport const TransactionsList = () => {\n  const { transactionsType } = useParams();\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectTransactions);\n\n  const onSubmitForm = transaction => {\n    dispatch(editTransaction(transaction))\n      .unwrap()\n      .then(() => {\n        dispatch(fetchCurrentUser());\n        dispatch(getTransactions({ type: transactionsType }));\n        toast.success('Transaction edited successfully!');\n        toggleEditTransaction();\n      })\n      .catch(error => {\n        toast.error('Something went wrong!');\n      });\n  };\n\n  const [isOpenEditTransaction, toggleEditTransaction] = useModal();\n\n  const filter = useSelector(selectFilter);\n  const getFilterValue = () => {\n    return transactions.filter(\n      item =>\n        item.category.categoryName\n          .toLowerCase()\n          .includes(filter.toLowerCase()) ||\n        item.comment.toLowerCase().includes(filter.toLowerCase()) ||\n        item.date.includes(filter) ||\n        item.time.includes(filter) ||\n        item.sum.toString().includes(filter)\n    );\n  };\n  const filterItems = getFilterValue();\n\n  const [currentItem, setCurrentItem] = useState({});\n\n  const handleOpenModal = item => {\n    setCurrentItem(item);\n    toggleEditTransaction();\n  };\n\n  return (\n    <div className={`${style.containerTable} scroll scrollB `}>\n      <div className={style.listTable}>\n        <div className={style.thead}>\n          <ul className={style.tr} key=\"111111\">\n            <li className={style.th}>Category</li>\n            <li className={style.th}>Comment</li>\n            <li className={style.th}>Date</li>\n            <li className={style.th}>Time</li>\n            <li className={style.th}>Sum</li>\n            <li className={style.th}>Actions</li>\n          </ul>\n        </div>\n        <div className={`${style.tbody} scroll scrollB`}>\n          {transactions.length === 0 && (\n            <TransactionsMessage\n              message={`Transaction ${transactionsType} list is empty!`}\n            />\n          )}\n          {filterItems.length !== 0 &&\n            filterItems.map(item => (\n              <TransactionsItem\n                key={item._id}\n                item={item}\n                handleOpenModal={handleOpenModal}\n              />\n            ))}\n          {filter && filterItems.length === 0 && transactions.length !== 0 && (\n            <TransactionsMessage message=\"Nothing found by filter!\" />\n          )}\n        </div>\n      </div>\n      {isOpenEditTransaction && (\n        <Modal toggleModal={toggleEditTransaction}>\n          <TransactionForm\n            transaction={currentItem}\n            onSubmitForm={onSubmitForm}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"TransactionsSearchTools_formContainer__L1znS\",\"formBox\":\"TransactionsSearchTools_formBox__6AVYx\",\"formInput\":\"TransactionsSearchTools_formInput__Rh6eq\",\"formCalendar\":\"TransactionsSearchTools_formCalendar__TAbGt\",\"datePicker\":\"TransactionsSearchTools_datePicker__gFkLv\",\"datepickerContainer\":\"TransactionsSearchTools_datepickerContainer__FHBMB\",\"react-datepicker-wrapper\":\"TransactionsSearchTools_react-datepicker-wrapper__J50Bl\",\"filterContainer\":\"TransactionsSearchTools_filterContainer__oF5ZW\",\"iconSearch\":\"TransactionsSearchTools_iconSearch__RJ6M+\",\"iconDate\":\"TransactionsSearchTools_iconDate__NhUU6\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport { format } from 'date-fns';\nimport {\n  changeDate,\n  changeFilter,\n  resetFilter,\n  selectDate,\n  selectFilter,\n} from '../../redux/Filter/filterSlice';\nimport { Icon } from '../Icon/Icon';\nimport { UniversalButton } from '../UniversalButton/UniversalButton';\nimport style from './TransactionsSearchTools.module.css';\n\nexport const TransactionsSearchTools = ({ handleOpenModal, type }) => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const changeFilterValue = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  useEffect(() => {\n    dispatch(resetFilter());\n  }, [type, dispatch]);\n\n  const date = useSelector(selectDate);\n  const changeDateValue = e => {\n    if (!e) {\n      dispatch(changeDate(format(new Date(), 'yyyy-MM-dd')));\n      return;\n    }\n    dispatch(changeDate(format(e, 'yyyy-MM-dd')));\n  };\n\n  const handleResetFilter = () => {\n    dispatch(resetFilter());\n  };\n\n  return (\n    <div className={style.formContainer}>\n      <form action=\"\" className={style.formBox}>\n        <div className={style.filterContainer}>\n          <input\n            value={filter}\n            onChange={changeFilterValue}\n            type=\"text\"\n            className={style.formInput}\n            placeholder=\"Search for anything..\"\n          />\n          <Icon name=\"search\" className={style.iconSearch} size=\"20\" />\n        </div>\n\n        <div className={style.datepickerContainer}>\n          <DatePicker\n            className={style.formCalendar}\n            selected={date}\n            onChange={changeDateValue}\n            showPopperArrow={false}\n            maxDate={new Date()}\n            placeholderText=\"dd/mm/yyyy\"\n          />\n          <Icon name=\"calendar\" className={style.iconDate} size=\"20\" />\n        </div>\n        <UniversalButton action={handleResetFilter} type=\"reset\" />\n        <UniversalButton className={style.addBtn} action={handleOpenModal} />\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TransactionsHistory_container__yz97E\",\"historyTitle\":\"TransactionsHistory_historyTitle__dZMeU\",\"historyText\":\"TransactionsHistory_historyText__ECljE\",\"textContainer\":\"TransactionsHistory_textContainer__YuU5U\",\"historyAmount\":\"TransactionsHistory_historyAmount__IEoNU\"};","import { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { TransactionsList } from '../components/TransactionsList/TransactionsList';\nimport { TransactionsSearchTools } from '../components/TransactionsSearchTools/TransactionsSearchTools';\nimport { Modal } from '../components/Modal/Modal';\nimport { TransactionForm } from '../components/TransactionForm/TransactionForm';\nimport { TransactionsTotal } from '../components/TransactionsTotal/TransactionsTotal';\nimport {\n  selectTotalTransExpenses,\n  selectTotalTransIncomes,\n} from '../redux/Transaction/transactionSlice';\nimport {\n  addTransaction,\n  getTransactions,\n} from '../redux/Transaction/operations';\nimport { resetFilter, selectDate } from '../redux/Filter/filterSlice';\nimport { useModal } from '../hooks';\nimport { fetchCurrentUser } from '../redux/User/operations';\nimport style from './TransactionsHistory.module.css';\n\nconst TransactionsHistory = () => {\n  const { transactionsType } = useParams();\n  const totalExpenses = useSelector(selectTotalTransExpenses);\n  const totalIncomes = useSelector(selectTotalTransIncomes);\n\n  const onSubmitForm = transaction => {\n    dispatch(addTransaction(transaction))\n      .unwrap()\n      .then(() => {\n        dispatch(fetchCurrentUser());\n        dispatch(getTransactions({ type: transactionsType }));\n        toggleIsAddModal();\n        toast.success('Transaction added successfully!');\n        dispatch(resetFilter());\n      })\n      .catch(error => {\n        toast.error('Something went wrong!');\n      });\n  };\n\n  const dispatch = useDispatch();\n  const filterDate = useSelector(selectDate);\n\n  let text = 'All Expense';\n  let description =\n    'View and manage every transaction seamlessly! Your entire financial landscape, all in one place.';\n  if (transactionsType === 'incomes') {\n    text = 'All incomes';\n    description =\n      'Track and celebrate every bit of earnings effortlessly! Gain insights into your total revenue in a snap.';\n  }\n\n  useEffect(() => {\n    if (filterDate) {\n      dispatch(getTransactions({ type: transactionsType, date: filterDate }));\n    } else {\n      dispatch(getTransactions({ type: transactionsType }));\n    }\n  }, [filterDate, dispatch, transactionsType]);\n\n  const [isAddModal, toggleIsAddModal] = useModal();\n\n  return (\n    <div className={style.container}>\n      <div className={style.textContainer}>\n        <h2 className={style.historyTitle}>{text}</h2>\n        <p className={style.historyText}>{description}</p>\n      </div>\n      <div className={style.historyAmount}>\n        <TransactionsTotal\n          totalAllExpenses={totalExpenses}\n          totalAllIncomes={totalIncomes}\n        />\n      </div>\n      <TransactionsSearchTools\n        handleOpenModal={toggleIsAddModal}\n        type={transactionsType}\n      />\n      <TransactionsList />\n      {isAddModal && (\n        <Modal toggleModal={toggleIsAddModal}>\n          <TransactionForm\n            onSubmitForm={onSubmitForm}\n            transactionsType={transactionsType}\n            history={transactionsType}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default TransactionsHistory;\n"],"names":["Shorter","str","windowSize","word","length","concat","slice","ShorterDate","TransactionsItem","_ref","item","handleOpenModal","_useState","useState","window","innerWidth","_useState2","_slicedToArray","setWindowSize","transactionsType","useParams","useEffect","handleWindowResize","addEventListener","removeEventListener","dispatch","useDispatch","currency","useSelector","selectCurrency","_jsxs","className","style","children","_jsx","category","categoryName","comment","dateString","dateObj","Date","dayOfWeek","getDay","day","getDate","month","getMonth","year","getFullYear","substring","toString","padStart","convertDate","date","time","sum","toUpperCase","onClick","Icon","name","size","id","_id","deleteTransaction","unwrap","then","fetchCurrentUser","getTransactions","type","toast","catch","error","TransactionsMessage","message","TransactionsList","transactions","selectTransactions","_useModal","useModal","_useModal2","isOpenEditTransaction","toggleEditTransaction","filter","selectFilter","filterItems","toLowerCase","includes","currentItem","setCurrentItem","map","Modal","toggleModal","TransactionForm","transaction","onSubmitForm","editTransaction","TransactionsSearchTools","resetFilter","selectDate","action","value","onChange","e","changeFilter","target","placeholder","DatePicker","selected","changeDate","format","showPopperArrow","maxDate","placeholderText","UniversalButton","totalExpenses","selectTotalTransExpenses","totalIncomes","selectTotalTransIncomes","filterDate","text","description","isAddModal","toggleIsAddModal","TransactionsTotal","totalAllExpenses","totalAllIncomes","addTransaction","history"],"sourceRoot":""}