{"version":3,"file":"static/js/925.8f98207d.chunk.js","mappings":"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","sources":["webpack://expense-tracker-app/./src/components/BgImageWrapper/BgImageWrapper.module.css?8cad","components/BgImageWrapper/BgImageWrapper.jsx","js/getRandomNumber.js","webpack://expense-tracker-app/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","webpack://expense-tracker-app/./src/pages/Register.module.css?6c75","pages/Register.jsx","schemas/validationSchema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"containerImg\":\"BgImageWrapper_containerImg__2XDcO\",\"containerSvg\":\"BgImageWrapper_containerSvg__wChVN\",\"icon\":\"BgImageWrapper_icon__Y-tXs\",\"containerText\":\"BgImageWrapper_containerText__dogbM\",\"moveBox\":\"BgImageWrapper_moveBox__FESZv\",\"containerBalance\":\"BgImageWrapper_containerBalance__+jgEq\",\"text\":\"BgImageWrapper_text__fXYZe\",\"balance\":\"BgImageWrapper_balance__6EXKP\",\"containerPercent\":\"BgImageWrapper_containerPercent__ovNOW\",\"percent\":\"BgImageWrapper_percent__8LxOt\"};","import React, { useState, useRef, useEffect } from 'react';\n\nimport { Icon } from '../Icon/Icon';\nimport { randomNumber, randomPercentage } from '../../js/getRandomNumber';\nimport style from './BgImageWrapper.module.css';\n\nexport const BgImageWrapper = () => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [animationDuration] = useState(15);\n  const [randomSum, setRandomSum] = useState(0);\n  const [randomPercent, setRandomPercent] = useState(0);\n  const animationRef = useRef(null);\n  const startTimeRef = useRef(null);\n  const viewportWidthRef = useRef(window.innerWidth);\n\n  useEffect(() => {\n    setRandomSum(randomNumber());\n    setRandomPercent(randomPercentage());\n  }, [currentStep]);\n\n  const handleAnimationStart = () => {\n    const viewportWidth = window.innerWidth;\n    viewportWidthRef.current = viewportWidth;\n\n    if (viewportWidth < 768) {\n      return;\n    }\n\n    startTimeRef.current = performance.now();\n    animationRef.current = requestAnimationFrame(updateAnimationProgress);\n  };\n\n  const updateAnimationProgress = () => {\n    const elapsedTime = performance.now() - startTimeRef.current;\n    const percentage = (elapsedTime / (animationDuration * 1000)) * 100;\n\n    // Check if viewport width has changed during the animation\n    if (\n      viewportWidthRef.current !== window.innerWidth &&\n      window.innerWidth < 768\n    ) {\n      return;\n    }\n\n    updateCurrentStep(percentage);\n\n    animationRef.current = requestAnimationFrame(updateAnimationProgress);\n  };\n\n  const updateCurrentStep = percentage => {\n    setCurrentStep(prevStep => {\n      const newStep = Math.ceil(percentage / 12.5);\n      return newStep !== prevStep ? newStep : prevStep;\n    });\n  };\n\n  return (\n    <div className={style.containerImg}>\n      <div\n        className={style.containerText}\n        onAnimationStart={handleAnimationStart}\n      >\n        <div className={style.containerSvg}>\n          <Icon name=\"arrow-up\" className={style.icon} size=\"18\" />\n        </div>\n        <div className={style.containerBalance}>\n          <p className={style.text}>Your balance</p>\n          <p className={style.balance}>{`$${randomSum}`}</p>\n        </div>\n        <div className={style.containerPercent}>\n          <p className={style.percent}>{`+${randomPercent.toFixed(2)}%`}</p>\n        </div>\n        <p className={style.dynamicText}></p>\n      </div>\n    </div>\n  );\n};\n","export const randomNumber = () => {\n  const randomNumber = Math.random() * (999 - 100) + 100;\n  return randomNumber.toFixed(3);\n};\nexport const randomPercentage = () => Math.random() * (100 - 1) + 1;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__w0Atp\",\"containerImg\":\"RegisterForm_containerImg__NqqMr\",\"containerTitle\":\"RegisterForm_containerTitle__yYLbM\",\"title\":\"RegisterForm_title__EvDyW\",\"text\":\"RegisterForm_text__cFC0o\",\"form\":\"RegisterForm_form__Tv43W\",\"containerForm\":\"RegisterForm_containerForm__OE-P+\",\"input\":\"RegisterForm_input__FsgBz\",\"containerIcon\":\"RegisterForm_containerIcon__sm6ah\",\"icon\":\"RegisterForm_icon__Xn6st\",\"button\":\"RegisterForm_button__B3hFq\",\"containerLink\":\"RegisterForm_containerLink__P82tD\",\"link\":\"RegisterForm_link__xu2eW\",\"span\":\"RegisterForm_span__L8jVb\",\"successInput\":\"RegisterForm_successInput__CuHET\",\"errorInput\":\"RegisterForm_errorInput__LuqSs\",\"successIcon\":\"RegisterForm_successIcon__J33Wc\",\"errorIcon\":\"RegisterForm_errorIcon__HFULE\",\"messageErr\":\"RegisterForm_messageErr__-+9wz\",\"messageSec\":\"RegisterForm_messageSec__nVTAy\"};","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classNames from 'classnames';\nimport { toast } from 'react-toastify';\nimport { BgImageWrapper } from '../../components/BgImageWrapper/BgImageWrapper';\nimport { Icon } from '../../components/Icon/Icon';\nimport { logIn, registerUser } from '../../redux/Auth/operations';\nimport { signUpSchema, signInSchema } from '../../schemas/validationSchema';\nimport style from './RegisterForm.module.css';\n\nconst RegisterForm = ({ signUp }) => {\n  const [showPass, setShowPass] = useState(false);\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors, dirtyFields },\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(signUp ? signUpSchema : signInSchema),\n  });\n  let navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const inputClass = fieldName => {\n    return classNames({\n      [`${style.input}`]: true,\n      [`${style.errorInput}`]:\n        errors[fieldName]?.message && dirtyFields[fieldName],\n      [`${style.successInput}`]:\n        !errors[fieldName]?.message && dirtyFields[fieldName],\n    });\n  };\n\n  const renderMessage = fieldName => {\n    if (errors[fieldName]?.message && dirtyFields[fieldName]) {\n      return <p className={style.messageErr}>{errors[fieldName]?.message}</p>;\n    }\n    return (\n      <p className={style.messageSec}>\n        {!errors[fieldName]?.message && dirtyFields[fieldName]\n          ? `${fieldName.charAt(0).toUpperCase()}${fieldName.slice(\n              1\n            )} is entered correct`\n          : ''}\n      </p>\n    );\n  };\n\n  const onSubmit = data => {\n    const { name, email, password } = data;\n\n    const userData = {\n      email,\n      password,\n    };\n\n    if (signUp) {\n      userData.name = name;\n    }\n\n    dispatch(signUp ? registerUser(userData) : logIn(userData))\n      .unwrap()\n      .then(userName => {\n        reset();\n        toast.success(\n          signUp\n            ? `Welcome, ${userName.name}!`\n            : `Welcome, ${userName.user.name}!`\n        );\n        signUp && navigate('/login');\n      })\n      .catch(error => {\n        if (error.response.status === 400) {\n          toast.error('Invalid data. Please check your input.');\n        } else if (error.response.status === 409) {\n          toast.error('User already exists. Please choose a different email.');\n        } else if (error.response.status === 403) {\n          toast.error('Invalid password.');\n        } else {\n          toast.error('An error occurred. Please try again later.');\n        }\n      });\n  };\n\n  return (\n    <div className={style.container}>\n      <div className={style.containerImg}>\n        <BgImageWrapper />\n      </div>\n      <div>\n        <div className={style.containerTitle}>\n          <h2 className={style.title}>{signUp ? 'Sign Up' : 'Sign In'}</h2>\n          <p className={style.text}>\n            {signUp\n              ? 'Step into a world of hassle-free expense management! Your journey towards financial mastery begins here.'\n              : 'Welcome back to effortless expense tracking! Your financial dashboard awaits.'}\n          </p>\n        </div>\n        <div className={style.containerForm}>\n          <div className={style.container}>\n            <form onSubmit={handleSubmit(onSubmit)} className={style.form}>\n              {signUp && (\n                <div className={style.containerIcon}>\n                  <input\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    className={inputClass('name')}\n                    {...register('name')}\n                  />\n                  {!errors.name?.message && dirtyFields.name && (\n                    <Icon\n                      name=\"success\"\n                      size=\"16\"\n                      className={style.successIcon}\n                    />\n                  )}\n                  {errors.name?.message && dirtyFields.name && (\n                    <Icon name=\"error\" size=\"16\" className={style.errorIcon} />\n                  )}\n                  {renderMessage('name')}\n                </div>\n              )}\n\n              <div className={style.containerIcon}>\n                <input\n                  name=\"email\"\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  className={inputClass('email')}\n                  {...register('email')}\n                />\n                {!errors.email?.message && dirtyFields.email && (\n                  <Icon\n                    name=\"success\"\n                    size=\"16\"\n                    className={style.successIcon}\n                  />\n                )}\n                {errors.email?.message && dirtyFields.email && (\n                  <Icon name=\"error\" size=\"16\" className={style.errorIcon} />\n                )}\n                {renderMessage('email')}\n              </div>\n              <div>\n                <div className={style.containerIcon}>\n                  <input\n                    name=\"password\"\n                    type={showPass ? 'text' : 'password'}\n                    placeholder=\"Password\"\n                    className={inputClass('password')}\n                    {...register('password')}\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPass(prev => !prev)}\n                  >\n                    {showPass ? (\n                      <Icon name=\"eye\" className={style.icon} size=\"16\" />\n                    ) : (\n                      <Icon name=\"eye-off\" className={style.icon} size=\"16\" />\n                    )}\n                  </button>\n                  {renderMessage('password')}\n                </div>\n              </div>\n              <div className={style.containerButton}>\n                <button type=\"submit\" className={style.button}>\n                  {signUp ? 'Sign Up' : 'Sign In'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className={style.containerLink}>\n          <NavLink className={style.link} to={signUp ? '/login' : '/register'}>\n            {signUp ? 'Already have an account?' : \"Don't have an account?\"}{' '}\n            <span className={style.span}>{signUp ? 'Sign In' : 'Sign Up'}</span>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Register_container__Mc99S\"};","import RegisterForm from '../components/RegisterForm/RegisterForm';\nimport style from './Register.module.css';\n\nconst Register = () => {\n  return (\n    <div className={style.container}>\n      <RegisterForm signUp />\n    </div>\n  );\n};\n\nexport default Register;\n","import * as yup from 'yup';\n\nexport const signUpSchema = yup.object({\n  name: yup\n    .string()\n    .required('Name is required')\n    .min(2, 'Min length must be more than 2 chars')\n    .max(32, 'Max length must be less than 32 chars'),\n  email: yup\n    .string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .max(64, 'Max length must be less than 64 chars'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(8, 'Min length must be more than 8 chars')\n    .max(64, 'Max length must be less than 64 chars'),\n});\n\nexport const signInSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .max(64, 'Max length must be less than 64 chars'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(8, 'Min length must be more than 8 chars')\n    .max(64, 'Max length must be less than 64 chars'),\n});\n\nexport const transactionSchema = yup.object({\n  date: yup.string().required('Date is required'),\n  time: yup.string().required('Time is required'),\n  category: yup.string().required('Category is required'),\n  sum: yup\n    .string()\n    .matches(/^[1-9][0-9]*$/, 'Sum must be greater than 0')\n    .test('max', 'Sum must be less than or equal to 1000000', value => {\n      if (!value) return true;\n      const parsedValue = parseInt(value, 10);\n      return !isNaN(parsedValue) && parsedValue <= 1000000;\n    })\n    .required('Sum is required'),\n  comment: yup\n    .string()\n    .required('Comment is required')\n    .min(3, 'Comment length must be at least 3 characters long'),\n});\n"],"names":["BgImageWrapper","_useState","useState","_useState2","_slicedToArray","currentStep","setCurrentStep","_useState3","animationDuration","_useState5","_useState6","randomSum","setRandomSum","_useState7","_useState8","randomPercent","setRandomPercent","animationRef","useRef","startTimeRef","viewportWidthRef","window","innerWidth","useEffect","Math","random","toFixed","updateAnimationProgress","percentage","performance","now","current","updateCurrentStep","requestAnimationFrame","prevStep","newStep","ceil","_jsx","className","style","children","_jsxs","onAnimationStart","viewportWidth","Icon","name","size","concat","_ref","_errors$name","_errors$name2","_errors$email","_errors$email2","signUp","showPass","setShowPass","_useForm","useForm","mode","resolver","yupResolver","signUpSchema","signInSchema","register","reset","handleSubmit","_useForm$formState","formState","errors","dirtyFields","navigate","useNavigate","dispatch","useDispatch","inputClass","fieldName","_errors$fieldName","_errors$fieldName2","_classNames","classNames","_defineProperty","message","renderMessage","_errors$fieldName3","_errors$fieldName5","_errors$fieldName4","charAt","toUpperCase","slice","onSubmit","data","userData","email","password","registerUser","logIn","unwrap","then","userName","toast","user","catch","error","response","status","_objectSpread","type","placeholder","onClick","prev","NavLink","to","RegisterForm","yup","required","min","max","shape","transactionSchema","date","time","category","sum","matches","test","value","parsedValue","parseInt","isNaN","comment"],"sourceRoot":""}